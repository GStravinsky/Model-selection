get_dummy <- function(df, col){
  col.fac <- factor(df[[col]])
  dummy <- model.matrix(~col.fac+0)
  colnames(dummy) <- gsub("col.fac",paste(col,"_",sep=""),colnames(dummy),fixed = TRUE)
  df <- cbind(df, dummy)
  return(df)
}

czechgold1 <- czechgold
for (i in 6:10){
  cols <- colnames(czechgold1)
  czechgold1 <- get_dummy(czechgold1, cols[i])
}

czechgold1$interact <- czechgold1$age * czechgold1$carduse_Yes

col.slt <- colnames(czechgold1)[-c(6:10,11,13,15,18,20)]
czechgold2 <- czechgold1[,col.slt]

deviance <- glm(Gold~mcardwdl+sex_M+interact, family="binomial", data=czechgold2)
summary(deviance)
fin_anov <- Anova(deviance, type=3)

install.packages("car")
library(car)

install.packages("stargazer")
library(stargazer)


install.packages("glmnet")
library(glmnet)


full <- glm(Gold~., family = "binomial", data=czechgold2)
stepwise <- step(full, direction = "both")


#Put  all x-variables into a matrix - use dummy variables rather than factor
x <- czechgold2[,c(2:12)]

x <- as.matrix(x)

y <- czechgold2[,1]
y <- ifelse(y==1,1,0)

set.seed(200)

fit1 <- glmnet(x,y, family="binomial", alpha=1)
par(mfrow=c(1,1))
#Crude plot trace
plot(fit1)
# plot of log(lambda) and label traces
plot(fit1,"lambda",label = T)
# Print out solution for lambda=1 (log(lambda) = 0)
coef(fit1,s=1)

cvfit1 = cv.glmnet(x,y, family="binomial",alpha=1)
cvfit1$lambda.min

coef(cvfit1, s = "lambda.min")
